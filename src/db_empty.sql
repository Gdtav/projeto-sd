-- MySQL Script generated by MySQL Workbench
-- Wed Oct 24 19:08:24 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dropmusic
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `dropmusic` ;

-- -----------------------------------------------------
-- Schema dropmusic
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dropmusic` DEFAULT CHARACTER SET utf8 ;
USE `dropmusic` ;

-- -----------------------------------------------------
-- Table `dropmusic`.`Artists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Artists` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Artists` (
  `idArtists` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `activity_start` DATE NULL,
  `activity_end` DATE NULL,
  `description` VARCHAR(256) NULL,
  PRIMARY KEY (`idArtists`),
  UNIQUE INDEX `idArtists_UNIQUE` (`idArtists` ASC) VISIBLE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dropmusic`.`Albums`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Albums` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Albums` (
  `idAlbums` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `release_date` DATE NULL,
  `Artists_idArtists` INT NOT NULL,
  PRIMARY KEY (`idAlbums`, `Artists_idArtists`),
  INDEX `fk_Albums_Artists1_idx` (`Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Albums_Artists1`
    FOREIGN KEY (`Artists_idArtists`)
    REFERENCES `dropmusic`.`Artists` (`idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dropmusic`.`Songs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Songs` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Songs` (
  `idSongs` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `lyrics` VARCHAR(8000) NULL,
  `Albums_idAlbums` INT UNSIGNED NOT NULL,
  `Albums_Artists_idArtists` INT NOT NULL,
  PRIMARY KEY (`idSongs`, `Albums_idAlbums`, `Albums_Artists_idArtists`),
  INDEX `fk_Songs_Albums1_idx` (`Albums_idAlbums` ASC, `Albums_Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Songs_Albums1`
    FOREIGN KEY (`Albums_idAlbums` , `Albums_Artists_idArtists`)
    REFERENCES `dropmusic`.`Albums` (`idAlbums` , `Artists_idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `dropmusic`.`Composers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Composers` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Composers` (
  `idComposers` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NULL,
  `role` VARCHAR(16) NULL,
  PRIMARY KEY (`idComposers`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Songs_Composers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Songs_Composers` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Songs_Composers` (
  `Songs_idSongs` INT NOT NULL,
  `Composers_idComposers` INT NOT NULL,
  PRIMARY KEY (`Songs_idSongs`, `Composers_idComposers`),
  INDEX `fk_Songs_has_Composers_Composers1_idx` (`Composers_idComposers` ASC) VISIBLE,
  INDEX `fk_Songs_has_Composers_Songs1_idx` (`Songs_idSongs` ASC) VISIBLE,
  CONSTRAINT `fk_Songs_has_Composers_Songs1`
    FOREIGN KEY (`Songs_idSongs`)
    REFERENCES `dropmusic`.`Songs` (`idSongs`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Songs_has_Composers_Composers1`
    FOREIGN KEY (`Composers_idComposers`)
    REFERENCES `dropmusic`.`Composers` (`idComposers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Concerts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Concerts` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Concerts` (
  `idConcerts` INT NOT NULL AUTO_INCREMENT,
  `city` VARCHAR(45) NOT NULL,
  `date` DATE NULL,
  PRIMARY KEY (`idConcerts`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Artists_has_Concerts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Artists_has_Concerts` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Artists_has_Concerts` (
  `Artists_idArtists` INT NOT NULL,
  `Concerts_idConcerts` INT NOT NULL,
  PRIMARY KEY (`Artists_idArtists`, `Concerts_idConcerts`),
  INDEX `fk_Artists_has_Concerts_Concerts1_idx` (`Concerts_idConcerts` ASC) VISIBLE,
  INDEX `fk_Artists_has_Concerts_Artists1_idx` (`Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Artists_has_Concerts_Artists1`
    FOREIGN KEY (`Artists_idArtists`)
    REFERENCES `dropmusic`.`Artists` (`idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Artists_has_Concerts_Concerts1`
    FOREIGN KEY (`Concerts_idConcerts`)
    REFERENCES `dropmusic`.`Concerts` (`idConcerts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Users` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Users` (
  `idUsers` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(256) NOT NULL,
  `editor` BINARY(1) NOT NULL,
  PRIMARY KEY (`idUsers`))
ENGINE = InnoDB;

INSERT INTO `Users`(idUsers,username,password,editor) VALUES
(NULL, 'Pmsilva', SHA2('password',256), 1),
(NULL, 'Gui', SHA2('password123',256), 1),
(NULL, 'Tester', SHA2('test',256), 0);
-- -----------------------------------------------------
-- Table `dropmusic`.`Song_Storage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Song_Storage` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Song_Storage` (
  `idSong_Storage` INT NOT NULL AUTO_INCREMENT,
  `path` VARCHAR(50) NOT NULL,
  `server_address` VARCHAR(50) NOT NULL,
  `Songs_idSongs` INT NOT NULL,
  PRIMARY KEY (`idSong_Storage`, `Songs_idSongs`),
  INDEX `fk_Song_Storage_Songs1_idx` (`Songs_idSongs` ASC) VISIBLE,
  CONSTRAINT `fk_Song_Storage_Songs1`
    FOREIGN KEY (`Songs_idSongs`)
    REFERENCES `dropmusic`.`Songs` (`idSongs`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Users_Song_Storage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Users_Song_Storage` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Users_Song_Storage` (
  `Users_idUsers` INT NOT NULL,
  `Song_Storage_idSong_Storage` INT NOT NULL,
  PRIMARY KEY (`Users_idUsers`, `Song_Storage_idSong_Storage`),
  INDEX `fk_Users_has_Song_Storage_Song_Storage1_idx` (`Song_Storage_idSong_Storage` ASC) VISIBLE,
  INDEX `fk_Users_has_Song_Storage_Users1_idx` (`Users_idUsers` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Song_Storage_Users1`
    FOREIGN KEY (`Users_idUsers`)
    REFERENCES `dropmusic`.`Users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Song_Storage_Song_Storage1`
    FOREIGN KEY (`Song_Storage_idSong_Storage`)
    REFERENCES `dropmusic`.`Song_Storage` (`idSong_Storage`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Ratings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Ratings` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Ratings` (
  `idRatings` INT NOT NULL AUTO_INCREMENT,
  `review` VARCHAR(256) NOT NULL,
  `rating` TINYINT(5) NOT NULL,
  `Users_idUsers` INT NOT NULL,
  `Albums_idAlbums` INT UNSIGNED NOT NULL,
  `Albums_Artists_idArtists` INT NOT NULL,
  PRIMARY KEY (`idRatings`, `Users_idUsers`, `Albums_idAlbums`, `Albums_Artists_idArtists`),
  INDEX `fk_Ratings_Users1_idx` (`Users_idUsers` ASC) VISIBLE,
  INDEX `fk_Ratings_Albums1_idx` (`Albums_idAlbums` ASC, `Albums_Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Ratings_Users1`
    FOREIGN KEY (`Users_idUsers`)
    REFERENCES `dropmusic`.`Users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ratings_Albums1`
    FOREIGN KEY (`Albums_idAlbums` , `Albums_Artists_idArtists`)
    REFERENCES `dropmusic`.`Albums` (`idAlbums` , `Artists_idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Notifications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Notifications` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Notifications` (
  `idNotifications` INT NOT NULL AUTO_INCREMENT,
  `notification` VARCHAR(256) NOT NULL,
  `Users_idUsers` INT NOT NULL,
  PRIMARY KEY (`idNotifications`, `Users_idUsers`),
  INDEX `fk_Notifications_Users1_idx` (`Users_idUsers` ASC) VISIBLE,
  CONSTRAINT `fk_Notifications_Users1`
    FOREIGN KEY (`Users_idUsers`)
    REFERENCES `dropmusic`.`Users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Artists_Edits`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Artists_Edits` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Artists_Edits` (
  `Artists_idArtists` INT NOT NULL,
  `Users_idUsers` INT NOT NULL,
  PRIMARY KEY (`Artists_idArtists`, `Users_idUsers`),
  INDEX `fk_Artists_has_Users_Users1_idx` (`Users_idUsers` ASC) VISIBLE,
  INDEX `fk_Artists_has_Users_Artists1_idx` (`Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Artists_has_Users_Artists1`
    FOREIGN KEY (`Artists_idArtists`)
    REFERENCES `dropmusic`.`Artists` (`idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Artists_has_Users_Users1`
    FOREIGN KEY (`Users_idUsers`)
    REFERENCES `dropmusic`.`Users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Albums_Edits`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Albums_Edits` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Albums_Edits` (
  `Albums_idAlbums` INT UNSIGNED NOT NULL,
  `Albums_Artists_idArtists` INT NOT NULL,
  `Users_idUsers` INT NOT NULL,
  PRIMARY KEY (`Albums_idAlbums`, `Albums_Artists_idArtists`, `Users_idUsers`),
  INDEX `fk_Albums_has_Users_Users1_idx` (`Users_idUsers` ASC) VISIBLE,
  INDEX `fk_Albums_has_Users_Albums1_idx` (`Albums_idAlbums` ASC, `Albums_Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Albums_has_Users_Albums1`
    FOREIGN KEY (`Albums_idAlbums` , `Albums_Artists_idArtists`)
    REFERENCES `dropmusic`.`Albums` (`idAlbums` , `Artists_idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Albums_has_Users_Users1`
    FOREIGN KEY (`Users_idUsers`)
    REFERENCES `dropmusic`.`Users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Genre` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Genre` (
  `idGenre` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`idGenre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Albums_Genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Albums_Genre` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Albums_Genre` (
  `Albums_idAlbums` INT UNSIGNED NOT NULL,
  `Albums_Artists_idArtists` INT NOT NULL,
  `Genre_idGenre` INT NOT NULL,
  PRIMARY KEY (`Albums_idAlbums`, `Albums_Artists_idArtists`, `Genre_idGenre`),
  INDEX `fk_Albums_has_Genre_Genre1_idx` (`Genre_idGenre` ASC) VISIBLE,
  INDEX `fk_Albums_has_Genre_Albums1_idx` (`Albums_idAlbums` ASC, `Albums_Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Albums_has_Genre_Albums1`
    FOREIGN KEY (`Albums_idAlbums` , `Albums_Artists_idArtists`)
    REFERENCES `dropmusic`.`Albums` (`idAlbums` , `Artists_idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Albums_has_Genre_Genre1`
    FOREIGN KEY (`Genre_idGenre`)
    REFERENCES `dropmusic`.`Genre` (`idGenre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Playlists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Playlists` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Playlists` (
  `Users_idUsers` INT NOT NULL,
  `Songs_idSongs` INT NOT NULL,
  `Songs_Albums_idAlbums` INT UNSIGNED NOT NULL,
  `Songs_Albums_Artists_idArtists` INT NOT NULL,
  PRIMARY KEY (`Users_idUsers`, `Songs_idSongs`, `Songs_Albums_idAlbums`, `Songs_Albums_Artists_idArtists`),
  INDEX `fk_Users_has_Songs_Songs1_idx` (`Songs_idSongs` ASC, `Songs_Albums_idAlbums` ASC, `Songs_Albums_Artists_idArtists` ASC) VISIBLE,
  INDEX `fk_Users_has_Songs_Users1_idx` (`Users_idUsers` ASC) VISIBLE,
  CONSTRAINT `fk_Users_has_Songs_Users1`
    FOREIGN KEY (`Users_idUsers`)
    REFERENCES `dropmusic`.`Users` (`idUsers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_Songs_Songs1`
    FOREIGN KEY (`Songs_idSongs` , `Songs_Albums_idAlbums` , `Songs_Albums_Artists_idArtists`)
    REFERENCES `dropmusic`.`Songs` (`idSongs` , `Albums_idAlbums` , `Albums_Artists_idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Members`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Members` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Members` (
  `idMembers` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idMembers`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dropmusic`.`Artists_Members`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dropmusic`.`Artists_Members` ;

CREATE TABLE IF NOT EXISTS `dropmusic`.`Artists_Members` (
  `Artists_idArtists` INT NOT NULL,
  `Members_idMembers` INT NOT NULL,
  PRIMARY KEY (`Artists_idArtists`, `Members_idMembers`),
  INDEX `fk_Artists_has_Members_Members1_idx` (`Members_idMembers` ASC) VISIBLE,
  INDEX `fk_Artists_has_Members_Artists1_idx` (`Artists_idArtists` ASC) VISIBLE,
  CONSTRAINT `fk_Artists_has_Members_Artists1`
    FOREIGN KEY (`Artists_idArtists`)
    REFERENCES `dropmusic`.`Artists` (`idArtists`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Artists_has_Members_Members1`
    FOREIGN KEY (`Members_idMembers`)
    REFERENCES `dropmusic`.`Members` (`idMembers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
